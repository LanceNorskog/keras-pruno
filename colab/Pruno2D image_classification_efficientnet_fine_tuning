{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Pruno2D image_classification_efficientnet_fine_tuning","provenance":[{"file_id":"https://github.com/keras-team/keras-io/blob/master/examples/vision/ipynb/image_classification_efficientnet_fine_tuning.ipynb","timestamp":1616133593197}],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.0"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"4434ffda901847c4833e46066e57af70":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_33f521e726704841b28a0ec11bd77c4f","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_13e52a9f2c6348bd91474cd096dc7d81","IPY_MODEL_624a0e4b978d44669c5f7818beaca909"]}},"33f521e726704841b28a0ec11bd77c4f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"13e52a9f2c6348bd91474cd096dc7d81":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_456da96efc5941e58937f188c8a7bf20","_dom_classes":[],"description":"Dl Completed...: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_cd5203c24dc24587aa4d910ad66e81e5"}},"624a0e4b978d44669c5f7818beaca909":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_b2b442e9ea154ccc96bea88697a12356","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 1/1 [00:52&lt;00:00, 52.74s/ url]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_025762bf9b3e41b4923c420b1e4483ed"}},"456da96efc5941e58937f188c8a7bf20":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"cd5203c24dc24587aa4d910ad66e81e5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"b2b442e9ea154ccc96bea88697a12356":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"025762bf9b3e41b4923c420b1e4483ed":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"032484f5f0164248845496fec2a8aa04":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_94d7d2040856460fa68c0657b0417187","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_6b6d1a98ac824ecfb850bbc64e398067","IPY_MODEL_5ff2ab02ef204a23bf67d8814922fd7c"]}},"94d7d2040856460fa68c0657b0417187":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"6b6d1a98ac824ecfb850bbc64e398067":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_7e50b7add3574026b3345418e34270fc","_dom_classes":[],"description":"Dl Size...: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_753bbe181ece4832976bdf20f98d394e"}},"5ff2ab02ef204a23bf67d8814922fd7c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_f48f54b7b9eb4bef9cc0f22d46cb0465","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 756/756 [00:52&lt;00:00, 14.34 MiB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_712bf544a8c9401088ab988ce30fe882"}},"7e50b7add3574026b3345418e34270fc":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"753bbe181ece4832976bdf20f98d394e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"f48f54b7b9eb4bef9cc0f22d46cb0465":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"712bf544a8c9401088ab988ce30fe882":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"9ee380133de0461ab62e4249e0bdd975":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_8029bd75bbea48608202a7bd981f256f","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_38df84a9753c41e9b003381104040953","IPY_MODEL_e20b09bf427d49da8fd956f80818d9db"]}},"8029bd75bbea48608202a7bd981f256f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"38df84a9753c41e9b003381104040953":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_ba5e5b5e232c4ce689cf57371398697d","_dom_classes":[],"description":"Dl Completed...: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_f5916233be4747319cdd697c63219561"}},"e20b09bf427d49da8fd956f80818d9db":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_c02806f1d1d943848253548ef0ae20a7","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 2/2 [00:07&lt;00:00,  3.95s/ url]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_5a28949b64704622ac97541cd1d53374"}},"ba5e5b5e232c4ce689cf57371398697d":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"f5916233be4747319cdd697c63219561":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"c02806f1d1d943848253548ef0ae20a7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"5a28949b64704622ac97541cd1d53374":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"a28b63a7587a49beb729830a2fd5cfa3":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_d900e234593748a6b605bd3e5e39d500","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_bff2bcbcc3164abb9784062ef1dd20e9","IPY_MODEL_ab75b7ae76b5437f8f7eeb4dcea6d28f"]}},"d900e234593748a6b605bd3e5e39d500":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"bff2bcbcc3164abb9784062ef1dd20e9":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_d32e9582d23a46a6933148d7466d94a2","_dom_classes":[],"description":"Dl Size...: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_8d147b2db9064cae84f954099e8a792b"}},"ab75b7ae76b5437f8f7eeb4dcea6d28f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_70621312036b4ed19bc418fa78adb3f5","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 20/20 [00:07&lt;00:00,  2.54 MiB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_e2dbd7d7f13641e2af893c7c020d451d"}},"d32e9582d23a46a6933148d7466d94a2":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"8d147b2db9064cae84f954099e8a792b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"70621312036b4ed19bc418fa78adb3f5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"e2dbd7d7f13641e2af893c7c020d451d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"5b7969ef27434f6aa9c5ceef039b6a3f":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_6e004ae6a96f403c857b9eb2e7a30855","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_d0aabc733f9045e38c857ba7e25b2bf8","IPY_MODEL_f458d3b313114ce78fb9fcde57370311"]}},"6e004ae6a96f403c857b9eb2e7a30855":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"d0aabc733f9045e38c857ba7e25b2bf8":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_ebb3b10f28dc4e36939bffece403ba02","_dom_classes":[],"description":"Extraction completed...: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_a680c5b0a2d3441fad214d1cbadf382a"}},"f458d3b313114ce78fb9fcde57370311":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_9e5d95870cd0466e81b0706e0e669e66","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 2/2 [00:07&lt;00:00,  3.92s/ file]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_ae53c380713243e3a32bf63bf32f9a83"}},"ebb3b10f28dc4e36939bffece403ba02":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"a680c5b0a2d3441fad214d1cbadf382a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"9e5d95870cd0466e81b0706e0e669e66":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"ae53c380713243e3a32bf63bf32f9a83":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"8e935cec15604d0e86694411259ecea3":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_00bd9a9dfd68432a8eb6b7cee88a5a23","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_351d136b735840cb940031d8451734ab","IPY_MODEL_f7ba9d45b7014f0082a4a67a3e9d81df"]}},"00bd9a9dfd68432a8eb6b7cee88a5a23":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"351d136b735840cb940031d8451734ab":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_82f9cbce074545f4a413dcdc2bcd2c59","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"info","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_b7fefbbdee7245c2a51054bdf9f9cdaf"}},"f7ba9d45b7014f0082a4a67a3e9d81df":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_91c8014fdf834196b4e7ebbcf95ea40c","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 12000/0 [00:11&lt;00:00, 1080.93 examples/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_4491480262a8497cb8dce3020a85d6e5"}},"82f9cbce074545f4a413dcdc2bcd2c59":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"b7fefbbdee7245c2a51054bdf9f9cdaf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"91c8014fdf834196b4e7ebbcf95ea40c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"4491480262a8497cb8dce3020a85d6e5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"e1e54f801a2e45098bff313fdca59c65":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_aa89575ce72a43dca56cd5cd56e85e0c","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_cd4215625b744f54b9b2deff2c85d014","IPY_MODEL_062762b0648246e8aa89d36cd8664a6d"]}},"aa89575ce72a43dca56cd5cd56e85e0c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"cd4215625b744f54b9b2deff2c85d014":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_19ac9e9f29b04bea9021f8a94ce12b7f","_dom_classes":[],"description":" 93%","_model_name":"FloatProgressModel","bar_style":"danger","max":12000,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":11177,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_841cebca449b44e6a2c52fd81f89d899"}},"062762b0648246e8aa89d36cd8664a6d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_4275b8dd960b41ccbd4c1282486a2b6d","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 11177/12000 [00:01&lt;00:00, 11516.89 examples/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_6738648ceaa04c4aaf931868d28192fe"}},"19ac9e9f29b04bea9021f8a94ce12b7f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"841cebca449b44e6a2c52fd81f89d899":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"4275b8dd960b41ccbd4c1282486a2b6d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"6738648ceaa04c4aaf931868d28192fe":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"c569010c18914fa2b513bc450ade2d12":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_f17d1a686b514804ad8f922fc44d9beb","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_b494593a73e24fdc95ce361de03b1445","IPY_MODEL_0eaeaff379d44af796b4da9108926ea5"]}},"f17d1a686b514804ad8f922fc44d9beb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"b494593a73e24fdc95ce361de03b1445":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_66e76660a6c84760bc0da6aa183bbde6","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"info","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_78ff596932c343ccaab3c87928a98dab"}},"0eaeaff379d44af796b4da9108926ea5":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_75048643f5d346549c96e25771a77b14","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 8580/0 [00:08&lt;00:00, 869.02 examples/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_402b3c7c8c04407ab9d42316052fb3a3"}},"66e76660a6c84760bc0da6aa183bbde6":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"78ff596932c343ccaab3c87928a98dab":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"75048643f5d346549c96e25771a77b14":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"402b3c7c8c04407ab9d42316052fb3a3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"15a4b4e5245749509b84137361d50520":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_03e03e5ceb3548b5993a2ecbce43ea93","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_c730a4b6f68b44749dbafd45fa77297f","IPY_MODEL_ab8eda1d413f48d7b60064c86f1f4675"]}},"03e03e5ceb3548b5993a2ecbce43ea93":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"c730a4b6f68b44749dbafd45fa77297f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_4f8f2145fd5c482b829e64c62f6c4ceb","_dom_classes":[],"description":" 98%","_model_name":"FloatProgressModel","bar_style":"danger","max":8580,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":8366,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_ca1c41a5d01c4f2a8f2da07c74bb143a"}},"ab8eda1d413f48d7b60064c86f1f4675":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_a5739169ff4d44459902a0af449cb73e","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 8366/8580 [00:00&lt;00:00, 15512.94 examples/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_ee819aa385864726a8efdca4200fc361"}},"4f8f2145fd5c482b829e64c62f6c4ceb":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"ca1c41a5d01c4f2a8f2da07c74bb143a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"a5739169ff4d44459902a0af449cb73e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"ee819aa385864726a8efdca4200fc361":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ruYmiRhoJ0h0","executionInfo":{"status":"ok","timestamp":1616808501966,"user_tz":420,"elapsed":9940,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}},"outputId":"0dd87866-4630-45cd-a179-8d46688a6034"},"source":["!pip install -q tensorflow==2.4.1\n","#%cd /content\n","#!git clone https://github.com/LanceNorskog/keras-pruno.git\n","#%cd /content/keras-pruno\n","#!git pull\n","#% cd keras_pruno \n","#!ls -l \n","!pip install git+https://github.com/LanceNorskog/keras-pruno.git\n","from keras_pruno import Pruno2D"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Collecting git+https://github.com/LanceNorskog/keras-pruno.git\n","  Cloning https://github.com/LanceNorskog/keras-pruno.git to /tmp/pip-req-build-uu32r0_v\n","  Running command git clone -q https://github.com/LanceNorskog/keras-pruno.git /tmp/pip-req-build-uu32r0_v\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from keras-pruno==0.1.0) (1.19.5)\n","Requirement already satisfied: tensorflow in /usr/local/lib/python3.7/dist-packages (from keras-pruno==0.1.0) (2.4.1)\n","Requirement already satisfied: six~=1.15.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow->keras-pruno==0.1.0) (1.15.0)\n","Requirement already satisfied: termcolor~=1.1.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow->keras-pruno==0.1.0) (1.1.0)\n","Requirement already satisfied: tensorboard~=2.4 in /usr/local/lib/python3.7/dist-packages (from tensorflow->keras-pruno==0.1.0) (2.4.1)\n","Requirement already satisfied: typing-extensions~=3.7.4 in /usr/local/lib/python3.7/dist-packages (from tensorflow->keras-pruno==0.1.0) (3.7.4.3)\n","Requirement already satisfied: flatbuffers~=1.12.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow->keras-pruno==0.1.0) (1.12)\n","Requirement already satisfied: h5py~=2.10.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow->keras-pruno==0.1.0) (2.10.0)\n","Requirement already satisfied: absl-py~=0.10 in /usr/local/lib/python3.7/dist-packages (from tensorflow->keras-pruno==0.1.0) (0.10.0)\n","Requirement already satisfied: protobuf>=3.9.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow->keras-pruno==0.1.0) (3.12.4)\n","Requirement already satisfied: gast==0.3.3 in /usr/local/lib/python3.7/dist-packages (from tensorflow->keras-pruno==0.1.0) (0.3.3)\n","Requirement already satisfied: astunparse~=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tensorflow->keras-pruno==0.1.0) (1.6.3)\n","Requirement already satisfied: keras-preprocessing~=1.1.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow->keras-pruno==0.1.0) (1.1.2)\n","Requirement already satisfied: grpcio~=1.32.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow->keras-pruno==0.1.0) (1.32.0)\n","Requirement already satisfied: wheel~=0.35 in /usr/local/lib/python3.7/dist-packages (from tensorflow->keras-pruno==0.1.0) (0.36.2)\n","Requirement already satisfied: google-pasta~=0.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow->keras-pruno==0.1.0) (0.2.0)\n","Requirement already satisfied: wrapt~=1.12.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow->keras-pruno==0.1.0) (1.12.1)\n","Requirement already satisfied: opt-einsum~=3.3.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow->keras-pruno==0.1.0) (3.3.0)\n","Requirement already satisfied: tensorflow-estimator<2.5.0,>=2.4.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow->keras-pruno==0.1.0) (2.4.0)\n","Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (1.0.1)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (3.3.4)\n","Requirement already satisfied: google-auth<2,>=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (1.27.1)\n","Requirement already satisfied: setuptools>=41.0.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (54.1.2)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (0.4.3)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (1.8.0)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (2.23.0)\n","Requirement already satisfied: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from markdown>=2.6.8->tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (3.7.2)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (0.2.8)\n","Requirement already satisfied: rsa<5,>=3.1.4; python_version >= \"3.6\" in /usr/local/lib/python3.7/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (4.7.2)\n","Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (4.2.1)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (1.3.0)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (1.24.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (2020.12.5)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata; python_version < \"3.8\"->markdown>=2.6.8->tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (3.4.1)\n","Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (0.4.8)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.4->tensorflow->keras-pruno==0.1.0) (3.1.0)\n","Building wheels for collected packages: keras-pruno\n","  Building wheel for keras-pruno (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for keras-pruno: filename=keras_pruno-0.1.0-cp37-none-any.whl size=10208 sha256=d8996e2e5efd4bf84be664930f1c1052c9f5400a8130ddba1ed0ab80fd249b7e\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-lsfzynjf/wheels/11/65/1e/2cb32657ee357dd6806a37407f1455c05ce8abeca5b8e4e524\n","Successfully built keras-pruno\n","Installing collected packages: keras-pruno\n","Successfully installed keras-pruno-0.1.0\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"HwxL-3qEEMNE"},"source":["# Image classification via fine-tuning with EfficientNet\n","\n","**Author:** [Yixing Fu](https://github.com/yixingfu)<br>\n","**Date created:** 2020/06/30<br>\n","**Last modified:** 2020/07/16<br>\n","**Description:** Use EfficientNet with weights pre-trained on imagenet for Stanford Dogs classification."]},{"cell_type":"markdown","metadata":{"id":"4Viq3B8VEMNL"},"source":["## Introduction: what is EfficientNet\n","\n","EfficientNet, first introduced in [Tan and Le, 2019](https://arxiv.org/abs/1905.11946)\n","is among the most efficient models (i.e. requiring least FLOPS for inference)\n","that reaches State-of-the-Art accuracy on both\n","imagenet and common image classification transfer learning tasks.\n","\n","The smallest base model is similar to [MnasNet](https://arxiv.org/abs/1807.11626), which\n","reached near-SOTA with a significantly smaller model. By introducing a heuristic way to\n","scale the model, EfficientNet provides a family of models (B0 to B7) that represents a\n","good combination of efficiency and accuracy on a variety of scales. Such a scaling\n","heuristics (compound-scaling, details see\n","[Tan and Le, 2019](https://arxiv.org/abs/1905.11946)) allows the\n","efficiency-oriented base model (B0) to surpass models at every scale, while avoiding\n","extensive grid-search of hyperparameters.\n","\n","A summary of the latest updates on the model is available at\n","[here](https://github.com/tensorflow/tpu/tree/master/models/official/efficientnet), where various\n","augmentation schemes and semi-supervised learning approaches are applied to further\n","improve the imagenet performance of the models. These extensions of the model can be used\n","by updating weights without changing model architecture.\n","\n","## B0 to B7 variants of EfficientNet\n","\n","*(This section provides some details on \"compound scaling\", and can be skipped\n","if you're only interested in using the models)*\n","\n","Based on the [original paper](https://arxiv.org/abs/1905.11946) people may have the\n","impression that EfficientNet is a continuous family of models created by arbitrarily\n","choosing scaling factor in as Eq.(3) of the paper.  However, choice of resolution,\n","depth and width are also restricted by many factors:\n","\n","- Resolution: Resolutions not divisible by 8, 16, etc. cause zero-padding near boundaries\n","of some layers which wastes computational resources. This especially applies to smaller\n","variants of the model, hence the input resolution for B0 and B1 are chosen as 224 and\n","240.\n","\n","- Depth and width: The building blocks of EfficientNet demands channel size to be\n","multiples of 8.\n","\n","- Resource limit: Memory limitation may bottleneck resolution when depth\n","and width can still increase. In such a situation, increasing depth and/or\n","width but keep resolution can still improve performance.\n","\n","As a result, the depth, width and resolution of each variant of the EfficientNet models\n","are hand-picked and proven to produce good results, though they may be significantly\n","off from the compound scaling formula.\n","Therefore, the keras implementation (detailed below) only provide these 8 models, B0 to B7,\n","instead of allowing arbitray choice of width / depth / resolution parameters.\n","\n","## Keras implementation of EfficientNet\n","\n","An implementation of EfficientNet B0 to B7 has been shipped with tf.keras since TF2.3. To\n","use EfficientNetB0 for classifying 1000 classes of images from imagenet, run:\n","\n","```python\n","from tensorflow.keras.applications import EfficientNetB0\n","model = EfficientNetB0(weights='imagenet')\n","```\n","\n","This model takes input images of shape (224, 224, 3), and the input data should range\n","[0, 255]. Normalization is included as part of the model.\n","\n","Because training EfficientNet on ImageNet takes a tremendous amount of resources and\n","several techniques that are not a part of the model architecture itself. Hence the Keras\n","implementation by default loads pre-trained weights obtained via training with\n","[AutoAugment](https://arxiv.org/abs/1805.09501).\n","\n","For B0 to B7 base models, the input shapes are different. Here is a list of input shape\n","expected for each model:\n","\n","| Base model | resolution|\n","|----------------|-----|\n","| EfficientNetB0 | 224 |\n","| EfficientNetB1 | 240 |\n","| EfficientNetB2 | 260 |\n","| EfficientNetB3 | 300 |\n","| EfficientNetB4 | 380 |\n","| EfficientNetB5 | 456 |\n","| EfficientNetB6 | 528 |\n","| EfficientNetB7 | 600 |\n","\n","When the model is intended for transfer learning, the Keras implementation\n","provides a option to remove the top layers:\n","```\n","model = EfficientNetB0(include_top=False, weights='imagenet')\n","```\n","This option excludes the final `Dense` layer that turns 1280 features on the penultimate\n","layer into prediction of the 1000 ImageNet classes. Replacing the top layer with custom\n","layers allows using EfficientNet as a feature extractor in a transfer learning workflow.\n","\n","Another argument in the model constructor worth noticing is `drop_connect_rate` which controls\n","the dropout rate responsible for [stochastic depth](https://arxiv.org/abs/1603.09382).\n","This parameter serves as a toggle for extra regularization in finetuning, but does not\n","affect loaded weights. For example, when stronger regularization is desired, try:\n","\n","```python\n","model = EfficientNetB0(weights='imagenet', drop_connect_rate=0.4)\n","```\n","The default value is 0.2.\n","\n","## Example: EfficientNetB0 for Stanford Dogs.\n","\n","EfficientNet is capable of a wide range of image classification tasks.\n","This makes it a good model for transfer learning.\n","As an end-to-end example, we will show using pre-trained EfficientNetB0 on\n","[Stanford Dogs](http://vision.stanford.edu/aditya86/ImageNetDogs/main.html) dataset."]},{"cell_type":"code","metadata":{"id":"_IH5vGgQEMNM","executionInfo":{"status":"ok","timestamp":1616808501968,"user_tz":420,"elapsed":9933,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}}},"source":["# IMG_SIZE is determined by EfficientNet model choice\n","IMG_SIZE = 224"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"dxaEu8IoEMNM"},"source":["## Setup and data loading\n","\n","This example requires TensorFlow 2.3 or above.\n","\n","To use TPU, the TPU runtime must match current running TensorFlow\n","version. If there is a mismatch, try:\n","\n","```python\n","from cloud_tpu_client import Client\n","c = Client()\n","c.configure_tpu_version(tf.__version__, restart_type=\"always\")\n","```"]},{"cell_type":"code","metadata":{"id":"oRKjtL-QEMNN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1616808505008,"user_tz":420,"elapsed":12966,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}},"outputId":"c61dbdc7-29a7-42ef-ee30-e3246e2af6f5"},"source":["import tensorflow as tf\n","\n","try:\n","    tpu = tf.distribute.cluster_resolver.TPUClusterResolver()  # TPU detection\n","    print(\"Running on TPU \", tpu.cluster_spec().as_dict()[\"worker\"])\n","    tf.config.experimental_connect_to_cluster(tpu)\n","    tf.tpu.experimental.initialize_tpu_system(tpu)\n","    strategy = tf.distribute.experimental.TPUStrategy(tpu)\n","except ValueError:\n","    print(\"Not connected to a TPU runtime. Using CPU/GPU strategy\")\n","    strategy = tf.distribute.MirroredStrategy()\n"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Not connected to a TPU runtime. Using CPU/GPU strategy\n","INFO:tensorflow:Using MirroredStrategy with devices ('/job:localhost/replica:0/task:0/device:GPU:0',)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"vlxI9VBNEMNN"},"source":["### Loading data\n","\n","Here we load data from [tensorflow_datasets](https://www.tensorflow.org/datasets)\n","(hereafter TFDS).\n","Stanford Dogs dataset is provided in\n","TFDS as [stanford_dogs](https://www.tensorflow.org/datasets/catalog/stanford_dogs).\n","It features 20,580 images that belong to 120 classes of dog breeds\n","(12,000 for training and 8,580 for testing).\n","\n","By simply changing `dataset_name` below, you may also try this notebook for\n","other datasets in TFDS such as\n","[cifar10](https://www.tensorflow.org/datasets/catalog/cifar10),\n","[cifar100](https://www.tensorflow.org/datasets/catalog/cifar100),\n","[food101](https://www.tensorflow.org/datasets/catalog/food101),\n","etc. When the images are much smaller than the size of EfficientNet input,\n","we can simply upsample the input images. It has been shown in\n","[Tan and Le, 2019](https://arxiv.org/abs/1905.11946) that transfer learning\n","result is better for increased resolution even if input images remain small.\n","\n","For TPU: if using TFDS datasets,\n","a [GCS bucket](https://cloud.google.com/storage/docs/key-terms#buckets)\n","location is required to save the datasets. For example:\n","\n","```python\n","tfds.load(dataset_name, data_dir=\"gs://example-bucket/datapath\")\n","```\n","\n","Also, both the current environment and the TPU service account have\n","proper [access](https://cloud.google.com/tpu/docs/storage-buckets#authorize_the_service_account)\n","to the bucket. Alternatively, for small datasets you may try loading data\n","into the memory and use `tf.data.Dataset.from_tensor_slices()`."]},{"cell_type":"code","metadata":{"id":"huC_hzyCEMNO","colab":{"base_uri":"https://localhost:8080/","height":499,"referenced_widgets":["4434ffda901847c4833e46066e57af70","33f521e726704841b28a0ec11bd77c4f","13e52a9f2c6348bd91474cd096dc7d81","624a0e4b978d44669c5f7818beaca909","456da96efc5941e58937f188c8a7bf20","cd5203c24dc24587aa4d910ad66e81e5","b2b442e9ea154ccc96bea88697a12356","025762bf9b3e41b4923c420b1e4483ed","032484f5f0164248845496fec2a8aa04","94d7d2040856460fa68c0657b0417187","6b6d1a98ac824ecfb850bbc64e398067","5ff2ab02ef204a23bf67d8814922fd7c","7e50b7add3574026b3345418e34270fc","753bbe181ece4832976bdf20f98d394e","f48f54b7b9eb4bef9cc0f22d46cb0465","712bf544a8c9401088ab988ce30fe882","9ee380133de0461ab62e4249e0bdd975","8029bd75bbea48608202a7bd981f256f","38df84a9753c41e9b003381104040953","e20b09bf427d49da8fd956f80818d9db","ba5e5b5e232c4ce689cf57371398697d","f5916233be4747319cdd697c63219561","c02806f1d1d943848253548ef0ae20a7","5a28949b64704622ac97541cd1d53374","a28b63a7587a49beb729830a2fd5cfa3","d900e234593748a6b605bd3e5e39d500","bff2bcbcc3164abb9784062ef1dd20e9","ab75b7ae76b5437f8f7eeb4dcea6d28f","d32e9582d23a46a6933148d7466d94a2","8d147b2db9064cae84f954099e8a792b","70621312036b4ed19bc418fa78adb3f5","e2dbd7d7f13641e2af893c7c020d451d","5b7969ef27434f6aa9c5ceef039b6a3f","6e004ae6a96f403c857b9eb2e7a30855","d0aabc733f9045e38c857ba7e25b2bf8","f458d3b313114ce78fb9fcde57370311","ebb3b10f28dc4e36939bffece403ba02","a680c5b0a2d3441fad214d1cbadf382a","9e5d95870cd0466e81b0706e0e669e66","ae53c380713243e3a32bf63bf32f9a83","8e935cec15604d0e86694411259ecea3","00bd9a9dfd68432a8eb6b7cee88a5a23","351d136b735840cb940031d8451734ab","f7ba9d45b7014f0082a4a67a3e9d81df","82f9cbce074545f4a413dcdc2bcd2c59","b7fefbbdee7245c2a51054bdf9f9cdaf","91c8014fdf834196b4e7ebbcf95ea40c","4491480262a8497cb8dce3020a85d6e5","e1e54f801a2e45098bff313fdca59c65","aa89575ce72a43dca56cd5cd56e85e0c","cd4215625b744f54b9b2deff2c85d014","062762b0648246e8aa89d36cd8664a6d","19ac9e9f29b04bea9021f8a94ce12b7f","841cebca449b44e6a2c52fd81f89d899","4275b8dd960b41ccbd4c1282486a2b6d","6738648ceaa04c4aaf931868d28192fe","c569010c18914fa2b513bc450ade2d12","f17d1a686b514804ad8f922fc44d9beb","b494593a73e24fdc95ce361de03b1445","0eaeaff379d44af796b4da9108926ea5","66e76660a6c84760bc0da6aa183bbde6","78ff596932c343ccaab3c87928a98dab","75048643f5d346549c96e25771a77b14","402b3c7c8c04407ab9d42316052fb3a3","15a4b4e5245749509b84137361d50520","03e03e5ceb3548b5993a2ecbce43ea93","c730a4b6f68b44749dbafd45fa77297f","ab8eda1d413f48d7b60064c86f1f4675","4f8f2145fd5c482b829e64c62f6c4ceb","ca1c41a5d01c4f2a8f2da07c74bb143a","a5739169ff4d44459902a0af449cb73e","ee819aa385864726a8efdca4200fc361"]},"executionInfo":{"status":"ok","timestamp":1616808589731,"user_tz":420,"elapsed":97680,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}},"outputId":"5789cfa0-75ff-4079-d7d3-28f386a80a1f"},"source":["import tensorflow_datasets as tfds\n","\n","batch_size = 64\n","\n","dataset_name = \"stanford_dogs\"\n","(ds_train, ds_test), ds_info = tfds.load(\n","    dataset_name, split=[\"train\", \"test\"], with_info=True, as_supervised=True\n",")\n","NUM_CLASSES = ds_info.features[\"label\"].num_classes\n"],"execution_count":4,"outputs":[{"output_type":"stream","text":["\u001b[1mDownloading and preparing dataset stanford_dogs/0.2.0 (download: 778.12 MiB, generated: Unknown size, total: 778.12 MiB) to /root/tensorflow_datasets/stanford_dogs/0.2.0...\u001b[0m\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4434ffda901847c4833e46066e57af70","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=1.0, bar_style='info', description='Dl Completed...', max=1.0, style=Progre…"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"032484f5f0164248845496fec2a8aa04","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=1.0, bar_style='info', description='Dl Size...', max=1.0, style=ProgressSty…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n","\n","\n","\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9ee380133de0461ab62e4249e0bdd975","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=1.0, bar_style='info', description='Dl Completed...', max=1.0, style=Progre…"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a28b63a7587a49beb729830a2fd5cfa3","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=1.0, bar_style='info', description='Dl Size...', max=1.0, style=ProgressSty…"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5b7969ef27434f6aa9c5ceef039b6a3f","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=1.0, bar_style='info', description='Extraction completed...', max=1.0, styl…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n","\n","\n","\n","\n","\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8e935cec15604d0e86694411259ecea3","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=1.0, bar_style='info', max=1.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\rShuffling and writing examples to /root/tensorflow_datasets/stanford_dogs/0.2.0.incomplete103A7J/stanford_dogs-train.tfrecord\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e1e54f801a2e45098bff313fdca59c65","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, max=12000.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\r"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c569010c18914fa2b513bc450ade2d12","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=1.0, bar_style='info', max=1.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\rShuffling and writing examples to /root/tensorflow_datasets/stanford_dogs/0.2.0.incomplete103A7J/stanford_dogs-test.tfrecord\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"15a4b4e5245749509b84137361d50520","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, max=8580.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\u001b[1mDataset stanford_dogs downloaded and prepared to /root/tensorflow_datasets/stanford_dogs/0.2.0. Subsequent calls will reuse this data.\u001b[0m\n","\r"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"e-PAr7DfEMNO"},"source":["When the dataset include images with various size, we need to resize them into a\n","shared size. The Stanford Dogs dataset includes only images at least 200x200\n","pixels in size. Here we resize the images to the input size needed for EfficientNet."]},{"cell_type":"code","metadata":{"id":"X9hvnCBUEMNO","executionInfo":{"status":"ok","timestamp":1616808589732,"user_tz":420,"elapsed":97673,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}}},"source":["size = (IMG_SIZE, IMG_SIZE)\n","ds_train = ds_train.map(lambda image, label: (tf.image.resize(image, size), label))\n","ds_test = ds_test.map(lambda image, label: (tf.image.resize(image, size), label))"],"execution_count":5,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RUwLAlG5EMNP"},"source":["### Visualizing the data\n","\n","The following code shows the first 9 images with their labels."]},{"cell_type":"code","metadata":{"id":"qxkGND8gEMNP","colab":{"base_uri":"https://localhost:8080/","height":264},"executionInfo":{"status":"ok","timestamp":1616808591054,"user_tz":420,"elapsed":98988,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}},"outputId":"26a568ec-ff93-4988-f075-dc1576720964"},"source":["import matplotlib.pyplot as plt\n","\n","\n","def format_label(label):\n","    string_label = label_info.int2str(label)\n","    return string_label.split(\"-\")[1]\n","\n","\n","label_info = ds_info.features[\"label\"]\n","for i, (image, label) in enumerate(ds_train.take(9)):\n","    ax = plt.subplot(3, 3, i + 1)\n","    plt.imshow(image.numpy().astype(\"uint8\"))\n","    plt.title(\"{}\".format(format_label(label)))\n","    plt.axis(\"off\")\n"],"execution_count":6,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 9 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"c295646dEMNP"},"source":["### Data augmentation\n","\n","We can use preprocessing layers APIs for image augmentation."]},{"cell_type":"code","metadata":{"id":"3Avw357yEMNQ","executionInfo":{"status":"ok","timestamp":1616808591055,"user_tz":420,"elapsed":98981,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}}},"source":["from tensorflow.keras.layers.experimental import preprocessing\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras import layers\n","\n","img_augmentation = Sequential(\n","    [\n","        preprocessing.RandomRotation(factor=0.15),\n","        preprocessing.RandomTranslation(height_factor=0.1, width_factor=0.1),\n","        preprocessing.RandomFlip(),\n","        preprocessing.RandomContrast(factor=0.1),\n","    ],\n","    name=\"img_augmentation\",\n",")"],"execution_count":7,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"PaBtIu47EMNQ"},"source":["This `Sequential` model object can be used both as a part of\n","the model we later build, and as a function to preprocess\n","data before feeding into the model. Using them as function makes\n","it easy to visualize the augmented images. Here we plot 9 examples\n","of augmentation result of a given figure."]},{"cell_type":"code","metadata":{"id":"cOPk7DA9EMNQ","colab":{"base_uri":"https://localhost:8080/","height":264},"executionInfo":{"status":"ok","timestamp":1616808592507,"user_tz":420,"elapsed":100424,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}},"outputId":"829e890a-c128-4880-8661-3da3690287a3"},"source":["for image, label in ds_train.take(1):\n","    for i in range(9):\n","        ax = plt.subplot(3, 3, i + 1)\n","        aug_img = img_augmentation(tf.expand_dims(image, axis=0))\n","        plt.imshow(aug_img[0].numpy().astype(\"uint8\"))\n","        plt.title(\"{}\".format(format_label(label)))\n","        plt.axis(\"off\")\n"],"execution_count":8,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 9 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"FpBKu6FGEMNR"},"source":["### Prepare inputs\n","\n","Once we verify the input data and augmentation are working correctly,\n","we prepare dataset for training. The input data are resized to uniform\n","`IMG_SIZE`. The labels are put into one-hot\n","(a.k.a. categorical) encoding. The dataset is batched.\n","\n","Note: `prefetch` and `AUTOTUNE` may in some situation improve\n","performance, but depends on environment and the specific dataset used.\n","See this [guide](https://www.tensorflow.org/guide/data_performance)\n","for more information on data pipeline performance."]},{"cell_type":"code","metadata":{"id":"nhdNUUtyEMNR","executionInfo":{"status":"ok","timestamp":1616808592507,"user_tz":420,"elapsed":100417,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}}},"source":["# One-hot / categorical encoding\n","def input_preprocess(image, label):\n","    label = tf.one_hot(label, NUM_CLASSES)\n","    return image, label\n","\n","\n","ds_train = ds_train.map(\n","    input_preprocess, num_parallel_calls=tf.data.experimental.AUTOTUNE\n",")\n","ds_train = ds_train.batch(batch_size=batch_size, drop_remainder=True)\n","ds_train = ds_train.prefetch(tf.data.experimental.AUTOTUNE)\n","\n","ds_test = ds_test.map(input_preprocess)\n","ds_test = ds_test.batch(batch_size=batch_size, drop_remainder=True)\n"],"execution_count":9,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Fa7IyAffwmuZ"},"source":["## Our EfficientNet with Pruno2D"]},{"cell_type":"code","metadata":{"id":"Q9f9T5HtwpxN","executionInfo":{"status":"ok","timestamp":1616808592508,"user_tz":420,"elapsed":100413,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}}},"source":[" \n","# Copyright 2019 The TensorFlow Authors. All Rights Reserved.\n","#\n","# Licensed under the Apache License, Version 2.0 (the \"License\");\n","# you may not use this file except in compliance with the License.\n","# You may obtain a copy of the License at\n","#\n","#     http://www.apache.org/licenses/LICENSE-2.0\n","#\n","# Unless required by applicable law or agreed to in writing, software\n","# distributed under the License is distributed on an \"AS IS\" BASIS,\n","# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","# See the License for the specific language governing permissions and\n","# limitations under the License.\n","# ==============================================================================\n","# pylint: disable=invalid-name\n","# pylint: disable=missing-docstring\n","\"\"\"EfficientNet models for Keras.\n","Reference:\n","  - [EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks](\n","      https://arxiv.org/abs/1905.11946) (ICML 2019)\n","\"\"\"\n","from __future__ import absolute_import\n","from __future__ import division\n","from __future__ import print_function\n","\n","import copy\n","import math\n","\n","from tensorflow.python.keras import backend\n","from tensorflow.python.keras.applications import imagenet_utils\n","from tensorflow.python.keras.engine import training\n","from tensorflow.python.keras.layers import VersionAwareLayers\n","from tensorflow.python.keras.utils import data_utils\n","from tensorflow.python.keras.utils import layer_utils\n","from tensorflow.python.lib.io import file_io\n","from tensorflow.python.util.tf_export import keras_export\n","\n","\n","BASE_WEIGHTS_PATH = 'https://storage.googleapis.com/keras-applications/'\n","\n","WEIGHTS_HASHES = {\n","    'b0': ('902e53a9f72be733fc0bcb005b3ebbac',\n","           '50bc09e76180e00e4465e1a485ddc09d'),\n","    'b1': ('1d254153d4ab51201f1646940f018540',\n","           '74c4e6b3e1f6a1eea24c589628592432'),\n","    'b2': ('b15cce36ff4dcbd00b6dd88e7857a6ad',\n","           '111f8e2ac8aa800a7a99e3239f7bfb39'),\n","    'b3': ('ffd1fdc53d0ce67064dc6a9c7960ede0',\n","           'af6d107764bb5b1abb91932881670226'),\n","    'b4': ('18c95ad55216b8f92d7e70b3a046e2fc',\n","           'ebc24e6d6c33eaebbd558eafbeedf1ba'),\n","    'b5': ('ace28f2a6363774853a83a0b21b9421a',\n","           '38879255a25d3c92d5e44e04ae6cec6f'),\n","    'b6': ('165f6e37dce68623721b423839de8be5',\n","           '9ecce42647a20130c1f39a5d4cb75743'),\n","    'b7': ('8c03f828fec3ef71311cd463b6759d99',\n","           'cbcfe4450ddf6f3ad90b1b398090fe4a'),\n","}\n","\n","DEFAULT_BLOCKS_ARGS = [{\n","    'kernel_size': 3,\n","    'repeats': 1,\n","    'filters_in': 32,\n","    'filters_out': 16,\n","    'expand_ratio': 1,\n","    'id_skip': True,\n","    'strides': 1,\n","    'se_ratio': 0.25\n","}, {\n","    'kernel_size': 3,\n","    'repeats': 2,\n","    'filters_in': 16,\n","    'filters_out': 24,\n","    'expand_ratio': 6,\n","    'id_skip': True,\n","    'strides': 2,\n","    'se_ratio': 0.25\n","}, {\n","    'kernel_size': 5,\n","    'repeats': 2,\n","    'filters_in': 24,\n","    'filters_out': 40,\n","    'expand_ratio': 6,\n","    'id_skip': True,\n","    'strides': 2,\n","    'se_ratio': 0.25\n","}, {\n","    'kernel_size': 3,\n","    'repeats': 3,\n","    'filters_in': 40,\n","    'filters_out': 80,\n","    'expand_ratio': 6,\n","    'id_skip': True,\n","    'strides': 2,\n","    'se_ratio': 0.25\n","}, {\n","    'kernel_size': 5,\n","    'repeats': 3,\n","    'filters_in': 80,\n","    'filters_out': 112,\n","    'expand_ratio': 6,\n","    'id_skip': True,\n","    'strides': 1,\n","    'se_ratio': 0.25\n","}, {\n","    'kernel_size': 5,\n","    'repeats': 4,\n","    'filters_in': 112,\n","    'filters_out': 192,\n","    'expand_ratio': 6,\n","    'id_skip': True,\n","    'strides': 2,\n","    'se_ratio': 0.25\n","}, {\n","    'kernel_size': 3,\n","    'repeats': 1,\n","    'filters_in': 192,\n","    'filters_out': 320,\n","    'expand_ratio': 6,\n","    'id_skip': True,\n","    'strides': 1,\n","    'se_ratio': 0.25\n","}]\n","\n","CONV_KERNEL_INITIALIZER = {\n","    'class_name': 'VarianceScaling',\n","    'config': {\n","        'scale': 2.0,\n","        'mode': 'fan_out',\n","        'distribution': 'truncated_normal'\n","    }\n","}\n","\n","DENSE_KERNEL_INITIALIZER = {\n","    'class_name': 'VarianceScaling',\n","    'config': {\n","        'scale': 1. / 3.,\n","        'mode': 'fan_out',\n","        'distribution': 'uniform'\n","    }\n","}\n","\n","layers = VersionAwareLayers()\n","\n","BASE_DOCSTRING = \"\"\"Instantiates the {name} architecture.\n","  Reference:\n","  - [EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks](\n","      https://arxiv.org/abs/1905.11946) (ICML 2019)\n","  Optionally loads weights pre-trained on ImageNet.\n","  Note that the data format convention used by the model is\n","  the one specified in your Keras config at `~/.keras/keras.json`.\n","  If you have never configured it, it defaults to `\"channels_last\"`.\n","  Arguments:\n","    include_top: Whether to include the fully-connected\n","        layer at the top of the network. Defaults to True.\n","    weights: One of `None` (random initialization),\n","          'imagenet' (pre-training on ImageNet),\n","          or the path to the weights file to be loaded. Defaults to 'imagenet'.\n","    input_tensor: Optional Keras tensor\n","        (i.e. output of `layers.Input()`)\n","        to use as image input for the model.\n","    input_shape: Optional shape tuple, only to be specified\n","        if `include_top` is False.\n","        It should have exactly 3 inputs channels.\n","    pooling: Optional pooling mode for feature extraction\n","        when `include_top` is `False`. Defaults to None.\n","        - `None` means that the output of the model will be\n","            the 4D tensor output of the\n","            last convolutional layer.\n","        - `avg` means that global average pooling\n","            will be applied to the output of the\n","            last convolutional layer, and thus\n","            the output of the model will be a 2D tensor.\n","        - `max` means that global max pooling will\n","            be applied.\n","    classes: Optional number of classes to classify images\n","        into, only to be specified if `include_top` is True, and\n","        if no `weights` argument is specified. Defaults to 1000 (number of\n","        ImageNet classes).\n","    classifier_activation: A `str` or callable. The activation function to use\n","        on the \"top\" layer. Ignored unless `include_top=True`. Set\n","        `classifier_activation=None` to return the logits of the \"top\" layer.\n","        Defaults to 'softmax'.\n","  Returns:\n","    A `keras.Model` instance.\n","\"\"\"\n","\n","\n","def EfficientNet(\n","    width_coefficient,\n","    depth_coefficient,\n","    default_size,\n","    dropout_rate=0.2,\n","    drop_connect_rate=0.2,\n","    depth_divisor=8,\n","    activation='swish',\n","    blocks_args='default',\n","    model_name='efficientnet',\n","    include_top=True,\n","    weights='imagenet',\n","    input_tensor=None,\n","    input_shape=None,\n","    pooling=None,\n","    classes=1000,\n","    classifier_activation='softmax',\n","    pruno_top=0.0,\n","    pruno_block=0.0):\n","  \"\"\"Instantiates the EfficientNet architecture using given scaling coefficients.\n","  Reference:\n","  - [EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks](\n","      https://arxiv.org/abs/1905.11946) (ICML 2019)\n","  Optionally loads weights pre-trained on ImageNet.\n","  Note that the data format convention used by the model is\n","  the one specified in your Keras config at `~/.keras/keras.json`.\n","  Arguments:\n","    width_coefficient: float, scaling coefficient for network width.\n","    depth_coefficient: float, scaling coefficient for network depth.\n","    default_size: integer, default input image size.\n","    dropout_rate: float, dropout rate before final classifier layer.\n","    drop_connect_rate: float, dropout rate at skip connections.\n","    depth_divisor: integer, a unit of network width.\n","    activation: activation function.\n","    blocks_args: list of dicts, parameters to construct block modules.\n","    model_name: string, model name.\n","    include_top: whether to include the fully-connected\n","        layer at the top of the network.\n","    weights: one of `None` (random initialization),\n","          'imagenet' (pre-training on ImageNet),\n","          or the path to the weights file to be loaded.\n","    input_tensor: optional Keras tensor\n","        (i.e. output of `layers.Input()`)\n","        to use as image input for the model.\n","    input_shape: optional shape tuple, only to be specified\n","        if `include_top` is False.\n","        It should have exactly 3 inputs channels.\n","    pooling: optional pooling mode for feature extraction\n","        when `include_top` is `False`.\n","        - `None` means that the output of the model will be\n","            the 4D tensor output of the\n","            last convolutional layer.\n","        - `avg` means that global average pooling\n","            will be applied to the output of the\n","            last convolutional layer, and thus\n","            the output of the model will be a 2D tensor.\n","        - `max` means that global max pooling will\n","            be applied.\n","    classes: optional number of classes to classify images\n","        into, only to be specified if `include_top` is True, and\n","        if no `weights` argument is specified.\n","    classifier_activation: A `str` or callable. The activation function to use\n","        on the \"top\" layer. Ignored unless `include_top=True`. Set\n","        `classifier_activation=None` to return the logits of the \"top\" layer.\n","  Returns:\n","    A `keras.Model` instance.\n","  Raises:\n","    ValueError: in case of invalid argument for `weights`,\n","      or invalid input shape.\n","    ValueError: if `classifier_activation` is not `softmax` or `None` when\n","      using a pretrained top layer.\n","  \"\"\"\n","  if blocks_args == 'default':\n","    blocks_args = DEFAULT_BLOCKS_ARGS\n","\n","  if not (weights in {'imagenet', None} or file_io.file_exists_v2(weights)):\n","    raise ValueError('The `weights` argument should be either '\n","                     '`None` (random initialization), `imagenet` '\n","                     '(pre-training on ImageNet), '\n","                     'or the path to the weights file to be loaded.')\n","\n","  if weights == 'imagenet' and include_top and classes != 1000:\n","    raise ValueError('If using `weights` as `\"imagenet\"` with `include_top`'\n","                     ' as true, `classes` should be 1000')\n","\n","  # Determine proper input shape\n","  input_shape = imagenet_utils.obtain_input_shape(\n","      input_shape,\n","      default_size=default_size,\n","      min_size=32,\n","      data_format=backend.image_data_format(),\n","      require_flatten=include_top,\n","      weights=weights)\n","\n","  if input_tensor is None:\n","    img_input = layers.Input(shape=input_shape)\n","  else:\n","    if not backend.is_keras_tensor(input_tensor):\n","      img_input = layers.Input(tensor=input_tensor, shape=input_shape)\n","    else:\n","      img_input = input_tensor\n","\n","  bn_axis = 3 if backend.image_data_format() == 'channels_last' else 1\n","\n","  def round_filters(filters, divisor=depth_divisor):\n","    \"\"\"Round number of filters based on depth multiplier.\"\"\"\n","    filters *= width_coefficient\n","    new_filters = max(divisor, int(filters + divisor / 2) // divisor * divisor)\n","    # Make sure that round down does not go down by more than 10%.\n","    if new_filters < 0.9 * filters:\n","      new_filters += divisor\n","    return int(new_filters)\n","\n","  def round_repeats(repeats):\n","    \"\"\"Round number of repeats based on depth multiplier.\"\"\"\n","    return int(math.ceil(depth_coefficient * repeats))\n","\n","  # Build stem\n","  x = img_input\n","  x = layers.Rescaling(1. / 255.)(x)\n","  x = layers.Normalization(axis=bn_axis)(x)\n","\n","  x = layers.ZeroPadding2D(\n","      padding=imagenet_utils.correct_pad(x, 3),\n","      name='stem_conv_pad')(x)\n","  x = layers.Conv2D(\n","      round_filters(32),\n","      3,\n","      strides=2,\n","      padding='valid',\n","      use_bias=False,\n","      kernel_initializer=CONV_KERNEL_INITIALIZER,\n","      name='stem_conv')(x)\n","  x = layers.BatchNormalization(axis=bn_axis, name='stem_bn')(x)\n","  x = layers.Activation(activation, name='stem_activation')(x)\n","\n","  # Build blocks\n","  blocks_args = copy.deepcopy(blocks_args)\n","\n","  print('start')\n","\n","  b = 0\n","  blocks = float(sum(round_repeats(args['repeats']) for args in blocks_args))\n","  do_batchnorm = True\n","  for (i, args) in enumerate(blocks_args):\n","    assert args['repeats'] > 0\n","    # Update block input and output filters based on depth multiplier.\n","    args['filters_in'] = round_filters(args['filters_in'])\n","    args['filters_out'] = round_filters(args['filters_out'])\n","\n","    if i + 1 == len(blocks_args) and pruno_block > 0.001:\n","        do_batchnorm = False\n","        block_activation='relu'\n","        drop_connect_rate = 0.0\n","        x = Pruno2D(pruno_block, batchwise=True, norm=True, name='block{}_pruno2d'.format(i+1))(x)\n","        print('last block, pruno')\n","    else:\n","        block_activation = activation\n","    for j in range(round_repeats(args.pop('repeats'))):\n","      # The first block needs to take care of stride and filter size increase.\n","      if j > 0:\n","        args['strides'] = 1\n","        args['filters_in'] = args['filters_out']\n","      x = block(\n","          x,\n","          activation=block_activation,\n","          drop_rate=drop_connect_rate * b / blocks,\n","          name='block{}{}_'.format(i + 1, chr(j + 97)),\n","          do_batchnorm=do_batchnorm,\n","          **args)\n","      b += 1\n","\n","  if pruno_top> 0.001:\n","      x = Pruno2D(pruno_top, batchwise=True, norm=True, name='top_pruno2d')(x)\n","      activation = 'relu'\n","\n","  # Build top\n","  x = layers.Conv2D(\n","      round_filters(1280),\n","      1,\n","      padding='same',\n","      use_bias=False,\n","      kernel_initializer=CONV_KERNEL_INITIALIZER,\n","      name='top_conv')(x)\n","  if pruno_top < 0.001:\n","      x = layers.BatchNormalization(axis=bn_axis, name='top_bn')(x)\n","  x = layers.Activation(activation, name='top_activation')(x)\n","  if include_top:\n","    x = layers.GlobalAveragePooling2D(name='avg_pool')(x)\n","    if dropout_rate > 0:\n","      x = layers.Dropout(dropout_rate, name='top_dropout')(x)\n","    imagenet_utils.validate_activation(classifier_activation, weights)\n","    x = layers.Dense(\n","        classes,\n","        activation=classifier_activation,\n","        kernel_initializer=DENSE_KERNEL_INITIALIZER,\n","        name='predictions')(x)\n","  else:\n","    if pooling == 'avg':\n","      x = layers.GlobalAveragePooling2D(name='avg_pool')(x)\n","    elif pooling == 'max':\n","      x = layers.GlobalMaxPooling2D(name='max_pool')(x)\n","\n","  # Ensure that the model takes into account\n","  # any potential predecessors of `input_tensor`.\n","  if input_tensor is not None:\n","    inputs = layer_utils.get_source_inputs(input_tensor)\n","  else:\n","    inputs = img_input\n","\n","  # Create model.\n","  model = training.Model(inputs, x, name=model_name)\n","\n","  # Load weights.\n","  if weights == 'imagenet':\n","    if include_top:\n","      file_suffix = '.h5'\n","      file_hash = WEIGHTS_HASHES[model_name[-2:]][0]\n","    else:\n","      file_suffix = '_notop.h5'\n","      file_hash = WEIGHTS_HASHES[model_name[-2:]][1]\n","    file_name = model_name + file_suffix\n","    weights_path = data_utils.get_file(\n","        file_name,\n","        BASE_WEIGHTS_PATH + file_name,\n","        cache_subdir='models',\n","        file_hash=file_hash)\n","    print('Loading Imagenet, by name')\n","    model.load_weights(weights_path, by_name=True)\n","  elif weights is not None:\n","    model.load_weights(weights, by_name=True)\n","  return model\n","\n","\n","def block(inputs,\n","          activation='swish',\n","          drop_rate=0.,\n","          name='',\n","          filters_in=32,\n","          filters_out=16,\n","          kernel_size=3,\n","          strides=1,\n","          expand_ratio=1,\n","          se_ratio=0.,\n","          id_skip=True,\n","          do_batchnorm=True):\n","  \"\"\"An inverted residual block.\n","  Arguments:\n","      inputs: input tensor.\n","      activation: activation function.\n","      drop_rate: float between 0 and 1, fraction of the input units to drop.\n","      name: string, block label.\n","      filters_in: integer, the number of input filters.\n","      filters_out: integer, the number of output filters.\n","      kernel_size: integer, the dimension of the convolution window.\n","      strides: integer, the stride of the convolution.\n","      expand_ratio: integer, scaling coefficient for the input filters.\n","      se_ratio: float between 0 and 1, fraction to squeeze the input filters.\n","      id_skip: boolean.\n","  Returns:\n","      output tensor for the block.\n","  \"\"\"\n","  bn_axis = 3 if backend.image_data_format() == 'channels_last' else 1\n","\n","  # Expansion phase\n","  filters = filters_in * expand_ratio\n","  if expand_ratio != 1:\n","    x = layers.Conv2D(\n","        filters,\n","        1,\n","        padding='same',\n","        use_bias=False,\n","        kernel_initializer=CONV_KERNEL_INITIALIZER,\n","        name=name + 'expand_conv')(\n","            inputs)\n","    if do_batchnorm:\n","        x = layers.BatchNormalization(axis=bn_axis, name=name + 'expand_bn')(x)\n","    x = layers.Activation(activation, name=name + 'expand_activation')(x)\n","  else:\n","    x = inputs\n","\n","  # Depthwise Convolution\n","  if strides == 2:\n","    x = layers.ZeroPadding2D(\n","        padding=imagenet_utils.correct_pad(x, kernel_size),\n","        name=name + 'dwconv_pad')(x)\n","    conv_pad = 'valid'\n","  else:\n","    conv_pad = 'same'\n","  x = layers.DepthwiseConv2D(\n","      kernel_size,\n","      strides=strides,\n","      padding=conv_pad,\n","      use_bias=False,\n","      depthwise_initializer=CONV_KERNEL_INITIALIZER,\n","      name=name + 'dwconv')(x)\n","  if do_batchnorm:\n","      x = layers.BatchNormalization(axis=bn_axis, name=name + 'bn')(x)\n","  x = layers.Activation(activation, name=name + 'activation')(x)\n","\n","  # Squeeze and Excitation phase\n","  if 0 < se_ratio <= 1:\n","    filters_se = max(1, int(filters_in * se_ratio))\n","    se = layers.GlobalAveragePooling2D(name=name + 'se_squeeze')(x)\n","    se = layers.Reshape((1, 1, filters), name=name + 'se_reshape')(se)\n","    se = layers.Conv2D(\n","        filters_se,\n","        1,\n","        padding='same',\n","        activation=activation,\n","        kernel_initializer=CONV_KERNEL_INITIALIZER,\n","        name=name + 'se_reduce')(\n","            se)\n","    se = layers.Conv2D(\n","        filters,\n","        1,\n","        padding='same',\n","        activation='sigmoid',\n","        kernel_initializer=CONV_KERNEL_INITIALIZER,\n","        name=name + 'se_expand')(se)\n","    x = layers.multiply([x, se], name=name + 'se_excite')\n","\n","  # Output phase\n","  x = layers.Conv2D(\n","      filters_out,\n","      1,\n","      padding='same',\n","      use_bias=False,\n","      kernel_initializer=CONV_KERNEL_INITIALIZER,\n","      name=name + 'project_conv')(x)\n","  # effect of Pruno has been sterilized by now\n","  x = layers.BatchNormalization(axis=bn_axis, name=name + 'project_bn')(x)\n","  if id_skip and strides == 1 and filters_in == filters_out:\n","    if drop_rate > 0.0:\n","      x = layers.Dropout(\n","          drop_rate, noise_shape=(None, 1, 1, 1), name=name + 'drop')(x)\n","    x = layers.add([x, inputs], name=name + 'add')\n","  return x\n","\n","\n","@keras_export('keras.applications.efficientnet.EfficientNetB0',\n","              'keras.applications.EfficientNetB0')\n","def EfficientNetB0(include_top=True,\n","                   weights='imagenet',\n","                   input_tensor=None,\n","                   input_shape=None,\n","                   pooling=None,\n","                   classes=1000,\n","                   classifier_activation='softmax',\n","                   dropout_rate=0.2,\n","                   pruno_top=0.0,\n","                   pruno_block=0.0,\n","                   **kwargs):\n","  return EfficientNet(\n","      1.0,\n","      1.0,\n","      224,\n","      dropout_rate=dropout_rate,\n","      model_name='efficientnetb0',\n","      include_top=include_top,\n","      weights=weights,\n","      input_tensor=input_tensor,\n","      input_shape=input_shape,\n","      pooling=pooling,\n","      classes=classes,\n","      classifier_activation=classifier_activation,\n","      pruno_top=pruno_top,\n","      pruno_block=pruno_block,\n","      **kwargs)\n","\n","EfficientNetB0.__doc__ = BASE_DOCSTRING.format(name='EfficientNetB0')\n","\n"],"execution_count":10,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"lXeSUFfoEMNR"},"source":["## Training a model from scratch\n","\n","We build an EfficientNetB0 with 120 output classes, that is initialized from scratch:\n","\n","Note: the accuracy will increase very slowly and may overfit."]},{"cell_type":"code","metadata":{"id":"HG4IFA7DEMNR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1616808710669,"user_tz":420,"elapsed":218567,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}},"outputId":"4661d7f4-6026-4e13-d840-77365d816bc2"},"source":["# from tensorflow.keras.applications import EfficientNetB0\n","\n","with strategy.scope():\n","    inputs = layers.Input(shape=(IMG_SIZE, IMG_SIZE, 3))\n","    x = img_augmentation(inputs)\n","    outputs = EfficientNetB0(include_top=True, weights=None, classes=NUM_CLASSES)(x)\n","\n","    model = tf.keras.Model(inputs, outputs)\n","    model.compile(\n","        optimizer=\"adam\", loss=\"categorical_crossentropy\", metrics=[\"accuracy\"]\n","    )\n","\n","model.summary()\n","\n","epochs = 1  # @param {type: \"slider\", min:1, max:100}\n","check = tf.keras.callbacks.EarlyStopping(patience=10)\n","hist = model.fit(ds_train, epochs=epochs, validation_data=ds_test, \n","                 callbacks=[check], verbose=2)\n"],"execution_count":11,"outputs":[{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stdout"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stderr"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stdout"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stderr"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stdout"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stderr"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stdout"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stderr"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stdout"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stderr"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stdout"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stderr"},{"output_type":"stream","text":["start\n","INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stdout"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stderr"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stdout"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stderr"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stdout"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stderr"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stdout"},{"output_type":"stream","text":["INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n"],"name":"stderr"},{"output_type":"stream","text":["Model: \"model\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_1 (InputLayer)         [(None, 224, 224, 3)]     0         \n","_________________________________________________________________\n","img_augmentation (Sequential (None, 224, 224, 3)       0         \n","_________________________________________________________________\n","efficientnetb0 (Functional)  (None, 120)               4203291   \n","=================================================================\n","Total params: 4,203,291\n","Trainable params: 4,161,268\n","Non-trainable params: 42,023\n","_________________________________________________________________\n","187/187 - 116s - loss: 4.9866 - accuracy: 0.0118 - val_loss: 5.2414 - val_accuracy: 0.0139\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"1-6jIjeeEMNR"},"source":["Training the model is relatively fast (takes only 20 seconds per epoch on TPUv2 that is\n","available on Colab). This might make it sounds easy to simply train EfficientNet on any\n","dataset wanted from scratch. However, training EfficientNet on smaller datasets,\n","especially those with lower resolution like CIFAR-100, faces the significant challenge of\n","overfitting.\n","\n","Hence training from scratch requires very careful choice of hyperparameters and is\n","difficult to find suitable regularization. It would also be much more demanding in resources.\n","Plotting the training and validation accuracy\n","makes it clear that validation accuracy stagnates at a low value."]},{"cell_type":"code","metadata":{"id":"1tm0OElMEMNS","colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"status":"ok","timestamp":1616808710670,"user_tz":420,"elapsed":218559,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}},"outputId":"db186d5f-5ef3-4529-b43d-eef0af848db6"},"source":["import matplotlib.pyplot as plt\n","\n","\n","def plot_hist(hist):\n","    plt.plot(hist.history[\"accuracy\"])\n","    plt.plot(hist.history[\"val_accuracy\"])\n","    plt.title(\"model accuracy\")\n","    plt.ylabel(\"accuracy\")\n","    plt.xlabel(\"epoch\")\n","    plt.legend([\"train\", \"validation\"], loc=\"upper left\")\n","    plt.show()\n","\n","\n","plot_hist(hist)"],"execution_count":12,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"nchJIBT4xJl3"},"source":["## Test Pruno2D"]},{"cell_type":"code","metadata":{"id":"v3wO4CozxJ0z","executionInfo":{"status":"ok","timestamp":1616810825372,"user_tz":420,"elapsed":1386,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}}},"source":["from tensorflow.keras.layers.experimental import preprocessing\n","\n","\n","def build_model_pruno(num_classes, pruno_pred=0.0, pruno_top=0.0, pruno_block=0.0, weights=None):\n","    inputs = layers.Input(shape=(IMG_SIZE, IMG_SIZE, 3))\n","    x = img_augmentation(inputs)\n","    model = EfficientNetB0(include_top=False, input_tensor=x, weights=weights,\n","                            pruno_top=pruno_top, pruno_block=pruno_block)\n","    model.trainable = False\n","    x = model.output\n","\n","    # Rebuild output prediction \"top\"\n","    # These layers are by default trainable\n","    if pruno_pred > 0.001:\n","        x = Pruno2D(pruno_pred, batchwise=True, norm=True, name='pred_pruno2d')(x)\n","    x = layers.GlobalAveragePooling2D(name=\"pred_pool\")(x)\n","    if pruno_pred < 0.001 and pruno_top < 0.001:\n","        x = layers.BatchNormalization()(x)\n","    \n","    x = layers.Dropout(0.2, name=\"pred_dropout\")(x)\n","    outputs = layers.Dense(NUM_CLASSES, activation=\"softmax\", name=\"pred_output\")(x)\n","\n","    # Compile\n","    model = tf.keras.Model(inputs, outputs, name=\"EfficientNet\")\n","    optimizer = tf.keras.optimizers.Adam(learning_rate=1e-3)\n","    model.compile(\n","        optimizer=optimizer, loss=\"categorical_crossentropy\", metrics=[\"accuracy\"]\n","    )\n","    return model\n","\n","def unfreeze_model(model, lr=1e-4, unfreeze=['block6', 'top']):\n","    # We unfreeze the top 20 layers while leaving BatchNorm layers frozen\n","    for layer in model.layers:\n","        for prefix in unfreeze:\n","            if layer.name.startswith(prefix):\n","                if not isinstance(layer, layers.BatchNormalization):\n","                    layer.trainable = True\n","                    print('Unfreeze: ', layer.name)\n","\n","    optimizer = tf.keras.optimizers.Adam(learning_rate=lr)\n","    model.compile(\n","        optimizer=optimizer, loss=\"categorical_crossentropy\", metrics=[\"accuracy\"]\n","    )"],"execution_count":15,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"H88KX5wJOCCz"},"source":["## No Pruno2D"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":703},"id":"FEFr2jxWOBMM","executionInfo":{"status":"ok","timestamp":1616793300588,"user_tz":420,"elapsed":668732,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}},"outputId":"7c865cd8-a0c9-4a92-b1b5-92b8c5f59edd"},"source":["with strategy.scope():\n","    model = build_model_pruno(num_classes=NUM_CLASSES, weights='imagenet')\n","\n","epochs = 50  \n","check = tf.keras.callbacks.EarlyStopping(patience=10)\n","hist = model.fit(ds_train, epochs=epochs, validation_data=ds_test, verbose=2\n","                 , callbacks=[check])\n","plot_hist(hist)"],"execution_count":14,"outputs":[{"output_type":"stream","text":["start\n","Downloading data from https://storage.googleapis.com/keras-applications/efficientnetb0_notop.h5\n","16711680/16705208 [==============================] - 1s 0us/step\n","Loading Imagenet, by name\n","Epoch 1/10\n","187/187 - 51s - loss: 3.7734 - accuracy: 0.1723 - val_loss: 1.8013 - val_accuracy: 0.5879\n","Epoch 2/10\n","187/187 - 39s - loss: 2.7011 - accuracy: 0.3356 - val_loss: 1.1951 - val_accuracy: 0.6509\n","Epoch 3/10\n","187/187 - 39s - loss: 2.3890 - accuracy: 0.3908 - val_loss: 1.1266 - val_accuracy: 0.6625\n","Epoch 4/10\n","187/187 - 39s - loss: 2.2427 - accuracy: 0.4237 - val_loss: 1.1066 - val_accuracy: 0.6694\n","Epoch 5/10\n","187/187 - 39s - loss: 2.1132 - accuracy: 0.4464 - val_loss: 1.1057 - val_accuracy: 0.6751\n","Epoch 6/10\n","187/187 - 39s - loss: 2.0098 - accuracy: 0.4743 - val_loss: 1.0883 - val_accuracy: 0.6827\n","Epoch 7/10\n","187/187 - 39s - loss: 1.9614 - accuracy: 0.4851 - val_loss: 1.0701 - val_accuracy: 0.6915\n","Epoch 8/10\n","187/187 - 40s - loss: 1.8671 - accuracy: 0.5005 - val_loss: 1.0660 - val_accuracy: 0.6957\n","Epoch 9/10\n","187/187 - 40s - loss: 1.8159 - accuracy: 0.5136 - val_loss: 1.1052 - val_accuracy: 0.6756\n","Epoch 10/10\n","187/187 - 39s - loss: 1.7960 - accuracy: 0.5140 - val_loss: 1.0695 - val_accuracy: 0.6930\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"Q3mx7hSdXBMQ"},"source":["## Transfer Learning #1\n","Add a Pruno2D layer after block 7, before the built-in top. Load Imagenet weights, and unfreeze block 7 and the top (except for BatchNormalization).\n","\n","Now that I think about it, how does Pruno & the batchnorm interact?\n","\n","The top has no batchnorm because Pruno.\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"BtbfzaiTPIkr","executionInfo":{"status":"ok","timestamp":1616794512839,"user_tz":420,"elapsed":1880971,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}},"outputId":"d0e2ab25-e241-4327-9807-1e4871562c2e"},"source":["with strategy.scope():\n","    model = build_model_pruno(num_classes=NUM_CLASSES, pruno_top=0.65, weights='imagenet')\n","    \n","unfreeze_model(model, unfreeze=['block7', 'top', 'pred'])\n","\n","epochs = 50  \n","check = tf.keras.callbacks.EarlyStopping(patience=10)\n","hist = model.fit(ds_train, epochs=epochs, validation_data=ds_test, verbose=2\n","                 , callbacks=[check])\n","plot_hist(hist)"],"execution_count":15,"outputs":[{"output_type":"stream","text":["start\n","build: (None, 7, 7, 320)\n","320 320 (7, 7)\n","Loading Imagenet, by name\n","Unfreeze:  block7a_expand_conv\n","Unfreeze:  block7a_expand_bn\n","Unfreeze:  block7a_expand_activation\n","Unfreeze:  block7a_dwconv\n","Unfreeze:  block7a_bn\n","Unfreeze:  block7a_activation\n","Unfreeze:  block7a_se_squeeze\n","Unfreeze:  block7a_se_reshape\n","Unfreeze:  block7a_se_reduce\n","Unfreeze:  block7a_se_expand\n","Unfreeze:  block7a_se_excite\n","Unfreeze:  block7a_project_conv\n","Unfreeze:  block7a_project_bn\n","Unfreeze:  top_pruno2d\n","Unfreeze:  top_conv\n","Unfreeze:  top_activation\n","Unfreeze:  pred_pool\n","Unfreeze:  pred_dropout\n","Unfreeze:  pred_output\n","Epoch 1/50\n","187/187 - 60s - loss: 5.4892 - accuracy: 0.0267 - val_loss: 3.4352 - val_accuracy: 0.1953\n","Epoch 2/50\n","187/187 - 41s - loss: 4.1465 - accuracy: 0.1082 - val_loss: 2.2186 - val_accuracy: 0.4069\n","Epoch 3/50\n","187/187 - 41s - loss: 3.4555 - accuracy: 0.1883 - val_loss: 1.6960 - val_accuracy: 0.5138\n","Epoch 4/50\n","187/187 - 41s - loss: 3.0511 - accuracy: 0.2530 - val_loss: 1.4315 - val_accuracy: 0.5787\n","Epoch 5/50\n","187/187 - 41s - loss: 2.8129 - accuracy: 0.2937 - val_loss: 1.3169 - val_accuracy: 0.6009\n","Epoch 6/50\n","187/187 - 41s - loss: 2.6351 - accuracy: 0.3229 - val_loss: 1.2212 - val_accuracy: 0.6297\n","Epoch 7/50\n","187/187 - 41s - loss: 2.4841 - accuracy: 0.3608 - val_loss: 1.1746 - val_accuracy: 0.6432\n","Epoch 8/50\n","187/187 - 41s - loss: 2.3895 - accuracy: 0.3730 - val_loss: 1.1323 - val_accuracy: 0.6572\n","Epoch 9/50\n","187/187 - 42s - loss: 2.2725 - accuracy: 0.3993 - val_loss: 1.1008 - val_accuracy: 0.6678\n","Epoch 10/50\n","187/187 - 42s - loss: 2.2128 - accuracy: 0.4122 - val_loss: 1.0962 - val_accuracy: 0.6677\n","Epoch 11/50\n","187/187 - 42s - loss: 2.1369 - accuracy: 0.4279 - val_loss: 1.0644 - val_accuracy: 0.6764\n","Epoch 12/50\n","187/187 - 43s - loss: 2.0732 - accuracy: 0.4450 - val_loss: 1.0618 - val_accuracy: 0.6777\n","Epoch 13/50\n","187/187 - 43s - loss: 2.0069 - accuracy: 0.4550 - val_loss: 1.0478 - val_accuracy: 0.6840\n","Epoch 14/50\n","187/187 - 43s - loss: 1.9482 - accuracy: 0.4706 - val_loss: 1.0414 - val_accuracy: 0.6860\n","Epoch 15/50\n","187/187 - 42s - loss: 1.9103 - accuracy: 0.4834 - val_loss: 1.0464 - val_accuracy: 0.6863\n","Epoch 16/50\n","187/187 - 42s - loss: 1.8485 - accuracy: 0.4897 - val_loss: 1.0476 - val_accuracy: 0.6862\n","Epoch 17/50\n","187/187 - 43s - loss: 1.8037 - accuracy: 0.5003 - val_loss: 1.0282 - val_accuracy: 0.6911\n","Epoch 18/50\n","187/187 - 43s - loss: 1.7591 - accuracy: 0.5089 - val_loss: 1.0222 - val_accuracy: 0.6922\n","Epoch 19/50\n","187/187 - 43s - loss: 1.7209 - accuracy: 0.5155 - val_loss: 1.0384 - val_accuracy: 0.6943\n","Epoch 20/50\n","187/187 - 43s - loss: 1.6688 - accuracy: 0.5318 - val_loss: 1.0455 - val_accuracy: 0.6938\n","Epoch 21/50\n","187/187 - 43s - loss: 1.6447 - accuracy: 0.5411 - val_loss: 1.0504 - val_accuracy: 0.6940\n","Epoch 22/50\n","187/187 - 42s - loss: 1.6002 - accuracy: 0.5507 - val_loss: 1.0432 - val_accuracy: 0.6948\n","Epoch 23/50\n","187/187 - 45s - loss: 1.5572 - accuracy: 0.5566 - val_loss: 1.0332 - val_accuracy: 0.6954\n","Epoch 24/50\n","187/187 - 44s - loss: 1.5295 - accuracy: 0.5639 - val_loss: 1.0439 - val_accuracy: 0.6926\n","Epoch 25/50\n","187/187 - 43s - loss: 1.5123 - accuracy: 0.5709 - val_loss: 1.0521 - val_accuracy: 0.6940\n","Epoch 26/50\n","187/187 - 44s - loss: 1.4663 - accuracy: 0.5792 - val_loss: 1.0571 - val_accuracy: 0.6897\n","Epoch 27/50\n","187/187 - 44s - loss: 1.4501 - accuracy: 0.5892 - val_loss: 1.0603 - val_accuracy: 0.6913\n","Epoch 28/50\n","187/187 - 44s - loss: 1.4045 - accuracy: 0.5989 - val_loss: 1.0670 - val_accuracy: 0.6899\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"j3_CjWkyg_Ey"},"source":["## Pruno at beginning of block 7"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"dQKbVNwMyNUq","executionInfo":{"status":"ok","timestamp":1616796119248,"user_tz":420,"elapsed":3487369,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}},"outputId":"e21751a9-cc3c-4681-9d18-517e0e6cb799"},"source":["with strategy.scope():\n","    model = build_model_pruno(num_classes=NUM_CLASSES, pruno_block=0.65, weights='imagenet')\n","    \n","unfreeze_model(model, unfreeze=['block6d', 'block7'])\n","\n","epochs = 50  \n","check = tf.keras.callbacks.EarlyStopping(patience=10)\n","hist = model.fit(ds_train, epochs=epochs, validation_data=ds_test, verbose=2\n","                 , callbacks=[check])\n","plot_hist(hist)"],"execution_count":16,"outputs":[{"output_type":"stream","text":["start\n","build: (None, 7, 7, 192)\n","192 192 (7, 7)\n","last block, pruno\n","Loading Imagenet, by name\n","Unfreeze:  block6d_expand_conv\n","Unfreeze:  block6d_expand_bn\n","Unfreeze:  block6d_expand_activation\n","Unfreeze:  block6d_dwconv\n","Unfreeze:  block6d_bn\n","Unfreeze:  block6d_activation\n","Unfreeze:  block6d_se_squeeze\n","Unfreeze:  block6d_se_reshape\n","Unfreeze:  block6d_se_reduce\n","Unfreeze:  block6d_se_expand\n","Unfreeze:  block6d_se_excite\n","Unfreeze:  block6d_project_conv\n","Unfreeze:  block6d_project_bn\n","Unfreeze:  block6d_drop\n","Unfreeze:  block6d_add\n","Unfreeze:  block7_pruno2d\n","Unfreeze:  block7a_expand_conv\n","Unfreeze:  block7a_expand_activation\n","Unfreeze:  block7a_dwconv\n","Unfreeze:  block7a_activation\n","Unfreeze:  block7a_se_squeeze\n","Unfreeze:  block7a_se_reshape\n","Unfreeze:  block7a_se_reduce\n","Unfreeze:  block7a_se_expand\n","Unfreeze:  block7a_se_excite\n","Unfreeze:  block7a_project_conv\n","Unfreeze:  block7a_project_bn\n","Epoch 1/50\n","187/187 - 58s - loss: 5.0892 - accuracy: 0.0292 - val_loss: 3.7426 - val_accuracy: 0.1306\n","Epoch 2/50\n","187/187 - 42s - loss: 4.0546 - accuracy: 0.1008 - val_loss: 2.6478 - val_accuracy: 0.3099\n","Epoch 3/50\n","187/187 - 42s - loss: 3.4600 - accuracy: 0.1815 - val_loss: 2.1422 - val_accuracy: 0.4118\n","Epoch 4/50\n","187/187 - 42s - loss: 3.0529 - accuracy: 0.2453 - val_loss: 1.8377 - val_accuracy: 0.4796\n","Epoch 5/50\n","187/187 - 42s - loss: 2.7600 - accuracy: 0.2980 - val_loss: 1.6382 - val_accuracy: 0.5309\n","Epoch 6/50\n","187/187 - 42s - loss: 2.5633 - accuracy: 0.3347 - val_loss: 1.5174 - val_accuracy: 0.5577\n","Epoch 7/50\n","187/187 - 43s - loss: 2.3683 - accuracy: 0.3749 - val_loss: 1.4232 - val_accuracy: 0.5869\n","Epoch 8/50\n","187/187 - 43s - loss: 2.2389 - accuracy: 0.4047 - val_loss: 1.3566 - val_accuracy: 0.6065\n","Epoch 9/50\n","187/187 - 43s - loss: 2.1366 - accuracy: 0.4315 - val_loss: 1.3178 - val_accuracy: 0.6090\n","Epoch 10/50\n","187/187 - 43s - loss: 2.0282 - accuracy: 0.4543 - val_loss: 1.2689 - val_accuracy: 0.6304\n","Epoch 11/50\n","187/187 - 43s - loss: 1.9545 - accuracy: 0.4684 - val_loss: 1.2397 - val_accuracy: 0.6327\n","Epoch 12/50\n","187/187 - 43s - loss: 1.8620 - accuracy: 0.4968 - val_loss: 1.2096 - val_accuracy: 0.6402\n","Epoch 13/50\n","187/187 - 43s - loss: 1.7769 - accuracy: 0.5137 - val_loss: 1.1855 - val_accuracy: 0.6476\n","Epoch 14/50\n","187/187 - 43s - loss: 1.7288 - accuracy: 0.5201 - val_loss: 1.1743 - val_accuracy: 0.6512\n","Epoch 15/50\n","187/187 - 43s - loss: 1.6578 - accuracy: 0.5438 - val_loss: 1.1633 - val_accuracy: 0.6507\n","Epoch 16/50\n","187/187 - 43s - loss: 1.6006 - accuracy: 0.5592 - val_loss: 1.1471 - val_accuracy: 0.6546\n","Epoch 17/50\n","187/187 - 43s - loss: 1.5569 - accuracy: 0.5659 - val_loss: 1.1403 - val_accuracy: 0.6569\n","Epoch 18/50\n","187/187 - 43s - loss: 1.5122 - accuracy: 0.5757 - val_loss: 1.1368 - val_accuracy: 0.6565\n","Epoch 19/50\n","187/187 - 43s - loss: 1.4593 - accuracy: 0.5873 - val_loss: 1.1293 - val_accuracy: 0.6597\n","Epoch 20/50\n","187/187 - 43s - loss: 1.3970 - accuracy: 0.6041 - val_loss: 1.1290 - val_accuracy: 0.6624\n","Epoch 21/50\n","187/187 - 43s - loss: 1.3533 - accuracy: 0.6219 - val_loss: 1.1188 - val_accuracy: 0.6637\n","Epoch 22/50\n","187/187 - 43s - loss: 1.3133 - accuracy: 0.6280 - val_loss: 1.1202 - val_accuracy: 0.6652\n","Epoch 23/50\n","187/187 - 43s - loss: 1.2872 - accuracy: 0.6364 - val_loss: 1.1189 - val_accuracy: 0.6698\n","Epoch 24/50\n","187/187 - 43s - loss: 1.2419 - accuracy: 0.6492 - val_loss: 1.1072 - val_accuracy: 0.6697\n","Epoch 25/50\n","187/187 - 43s - loss: 1.1909 - accuracy: 0.6582 - val_loss: 1.1123 - val_accuracy: 0.6697\n","Epoch 26/50\n","187/187 - 43s - loss: 1.1857 - accuracy: 0.6623 - val_loss: 1.1074 - val_accuracy: 0.6697\n","Epoch 27/50\n","187/187 - 43s - loss: 1.1171 - accuracy: 0.6810 - val_loss: 1.1070 - val_accuracy: 0.6670\n","Epoch 28/50\n","187/187 - 43s - loss: 1.1013 - accuracy: 0.6837 - val_loss: 1.1133 - val_accuracy: 0.6729\n","Epoch 29/50\n","187/187 - 43s - loss: 1.0731 - accuracy: 0.6953 - val_loss: 1.1166 - val_accuracy: 0.6698\n","Epoch 30/50\n","187/187 - 43s - loss: 1.0391 - accuracy: 0.7056 - val_loss: 1.1098 - val_accuracy: 0.6711\n","Epoch 31/50\n","187/187 - 43s - loss: 1.0175 - accuracy: 0.7051 - val_loss: 1.1247 - val_accuracy: 0.6676\n","Epoch 32/50\n","187/187 - 43s - loss: 0.9820 - accuracy: 0.7162 - val_loss: 1.1277 - val_accuracy: 0.6683\n","Epoch 33/50\n","187/187 - 43s - loss: 0.9736 - accuracy: 0.7184 - val_loss: 1.1229 - val_accuracy: 0.6692\n","Epoch 34/50\n","187/187 - 42s - loss: 0.9283 - accuracy: 0.7309 - val_loss: 1.1269 - val_accuracy: 0.6695\n","Epoch 35/50\n","187/187 - 42s - loss: 0.9080 - accuracy: 0.7416 - val_loss: 1.1423 - val_accuracy: 0.6688\n","Epoch 36/50\n","187/187 - 42s - loss: 0.8938 - accuracy: 0.7459 - val_loss: 1.1117 - val_accuracy: 0.6776\n","Epoch 37/50\n","187/187 - 42s - loss: 0.8471 - accuracy: 0.7518 - val_loss: 1.1333 - val_accuracy: 0.6706\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"heOM0lL30ph_"},"source":["## Both Pruno"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Ak3yiyGTvXg8","executionInfo":{"status":"ok","timestamp":1616797448609,"user_tz":420,"elapsed":4816719,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}},"outputId":"02f7a0cb-550b-4a90-eaf4-2e901aa529a4"},"source":["with strategy.scope():\n","    model = build_model_pruno(num_classes=NUM_CLASSES, pruno_top=0.65, pruno_block=0.65, weights='imagenet')\n","    \n","unfreeze_model(model, unfreeze=['block6d', 'block7', 'top', 'pred'])\n","\n","epochs = 50  \n","check = tf.keras.callbacks.EarlyStopping(patience=10)\n","hist = model.fit(ds_train, epochs=epochs, validation_data=ds_test, verbose=2\n","                 , callbacks=[check])\n","plot_hist(hist)"],"execution_count":17,"outputs":[{"output_type":"stream","text":["start\n","build: (None, 7, 7, 192)\n","192 192 (7, 7)\n","last block, pruno\n","build: (None, 7, 7, 320)\n","320 320 (7, 7)\n","Loading Imagenet, by name\n","Unfreeze:  block6d_expand_conv\n","Unfreeze:  block6d_expand_bn\n","Unfreeze:  block6d_expand_activation\n","Unfreeze:  block6d_dwconv\n","Unfreeze:  block6d_bn\n","Unfreeze:  block6d_activation\n","Unfreeze:  block6d_se_squeeze\n","Unfreeze:  block6d_se_reshape\n","Unfreeze:  block6d_se_reduce\n","Unfreeze:  block6d_se_expand\n","Unfreeze:  block6d_se_excite\n","Unfreeze:  block6d_project_conv\n","Unfreeze:  block6d_project_bn\n","Unfreeze:  block6d_drop\n","Unfreeze:  block6d_add\n","Unfreeze:  block7_pruno2d\n","Unfreeze:  block7a_expand_conv\n","Unfreeze:  block7a_expand_activation\n","Unfreeze:  block7a_dwconv\n","Unfreeze:  block7a_activation\n","Unfreeze:  block7a_se_squeeze\n","Unfreeze:  block7a_se_reshape\n","Unfreeze:  block7a_se_reduce\n","Unfreeze:  block7a_se_expand\n","Unfreeze:  block7a_se_excite\n","Unfreeze:  block7a_project_conv\n","Unfreeze:  block7a_project_bn\n","Unfreeze:  top_pruno2d\n","Unfreeze:  top_conv\n","Unfreeze:  top_activation\n","Unfreeze:  pred_pool\n","Unfreeze:  pred_dropout\n","Unfreeze:  pred_output\n","Epoch 1/50\n","187/187 - 68s - loss: 5.1874 - accuracy: 0.0364 - val_loss: 3.3269 - val_accuracy: 0.1651\n","Epoch 2/50\n","187/187 - 44s - loss: 3.9355 - accuracy: 0.1095 - val_loss: 2.2860 - val_accuracy: 0.3497\n","Epoch 3/50\n","187/187 - 44s - loss: 3.3987 - accuracy: 0.1794 - val_loss: 1.8382 - val_accuracy: 0.4630\n","Epoch 4/50\n","187/187 - 44s - loss: 3.0613 - accuracy: 0.2317 - val_loss: 1.6190 - val_accuracy: 0.5195\n","Epoch 5/50\n","187/187 - 44s - loss: 2.8420 - accuracy: 0.2731 - val_loss: 1.4507 - val_accuracy: 0.5645\n","Epoch 6/50\n","187/187 - 45s - loss: 2.6864 - accuracy: 0.3046 - val_loss: 1.3932 - val_accuracy: 0.5746\n","Epoch 7/50\n","187/187 - 44s - loss: 2.5343 - accuracy: 0.3407 - val_loss: 1.3101 - val_accuracy: 0.6018\n","Epoch 8/50\n","187/187 - 45s - loss: 2.4093 - accuracy: 0.3633 - val_loss: 1.2643 - val_accuracy: 0.6115\n","Epoch 9/50\n","187/187 - 45s - loss: 2.3055 - accuracy: 0.3802 - val_loss: 1.2400 - val_accuracy: 0.6233\n","Epoch 10/50\n","187/187 - 45s - loss: 2.2452 - accuracy: 0.3972 - val_loss: 1.2144 - val_accuracy: 0.6336\n","Epoch 11/50\n","187/187 - 45s - loss: 2.1519 - accuracy: 0.4146 - val_loss: 1.1811 - val_accuracy: 0.6453\n","Epoch 12/50\n","187/187 - 45s - loss: 2.0778 - accuracy: 0.4313 - val_loss: 1.1649 - val_accuracy: 0.6494\n","Epoch 13/50\n","187/187 - 45s - loss: 2.0070 - accuracy: 0.4505 - val_loss: 1.1506 - val_accuracy: 0.6565\n","Epoch 14/50\n","187/187 - 45s - loss: 1.9708 - accuracy: 0.4495 - val_loss: 1.1628 - val_accuracy: 0.6528\n","Epoch 15/50\n","187/187 - 45s - loss: 1.9179 - accuracy: 0.4759 - val_loss: 1.1459 - val_accuracy: 0.6567\n","Epoch 16/50\n","187/187 - 45s - loss: 1.8632 - accuracy: 0.4896 - val_loss: 1.1409 - val_accuracy: 0.6545\n","Epoch 17/50\n","187/187 - 45s - loss: 1.8246 - accuracy: 0.4888 - val_loss: 1.1190 - val_accuracy: 0.6688\n","Epoch 18/50\n","187/187 - 45s - loss: 1.7730 - accuracy: 0.5028 - val_loss: 1.1331 - val_accuracy: 0.6645\n","Epoch 19/50\n","187/187 - 45s - loss: 1.7207 - accuracy: 0.5109 - val_loss: 1.1098 - val_accuracy: 0.6742\n","Epoch 20/50\n","187/187 - 45s - loss: 1.6668 - accuracy: 0.5328 - val_loss: 1.1110 - val_accuracy: 0.6737\n","Epoch 21/50\n","187/187 - 45s - loss: 1.6394 - accuracy: 0.5313 - val_loss: 1.1262 - val_accuracy: 0.6711\n","Epoch 22/50\n","187/187 - 45s - loss: 1.6186 - accuracy: 0.5437 - val_loss: 1.1302 - val_accuracy: 0.6720\n","Epoch 23/50\n","187/187 - 45s - loss: 1.5506 - accuracy: 0.5550 - val_loss: 1.1289 - val_accuracy: 0.6742\n","Epoch 24/50\n","187/187 - 45s - loss: 1.5266 - accuracy: 0.5592 - val_loss: 1.1250 - val_accuracy: 0.6765\n","Epoch 25/50\n","187/187 - 44s - loss: 1.4694 - accuracy: 0.5793 - val_loss: 1.1425 - val_accuracy: 0.6743\n","Epoch 26/50\n","187/187 - 45s - loss: 1.4523 - accuracy: 0.5823 - val_loss: 1.1325 - val_accuracy: 0.6747\n","Epoch 27/50\n","187/187 - 45s - loss: 1.4113 - accuracy: 0.5903 - val_loss: 1.1529 - val_accuracy: 0.6739\n","Epoch 28/50\n","187/187 - 45s - loss: 1.3754 - accuracy: 0.5995 - val_loss: 1.1261 - val_accuracy: 0.6761\n","Epoch 29/50\n","187/187 - 45s - loss: 1.3445 - accuracy: 0.6046 - val_loss: 1.1476 - val_accuracy: 0.6775\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"LqFqoLpOg0Tg"},"source":[""]},{"cell_type":"markdown","metadata":{"id":"EkcRolFZhCrQ"},"source":["## Pruno2D in prediction top"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"vNZFVPYe02YO","executionInfo":{"status":"ok","timestamp":1616812791467,"user_tz":420,"elapsed":1954316,"user":{"displayName":"Lance N.","photoUrl":"","userId":"10641691903871358793"}},"outputId":"36fa1fc9-d233-4b24-e631-d2f9b913fd07"},"source":["with strategy.scope():\n","    model = build_model_pruno(num_classes=NUM_CLASSES, pruno_pred=0.65, weights='imagenet')\n","unfreeze_model(model, unfreeze=['top', 'pred'])\n","    \n","epochs = 50  \n","check = tf.keras.callbacks.EarlyStopping(patience=10)\n","hist = model.fit(ds_train, epochs=epochs, validation_data=ds_test, verbose=2\n","                 , callbacks=[check])\n","plot_hist(hist)"],"execution_count":16,"outputs":[{"output_type":"stream","text":["start\n","Loading Imagenet, by name\n","build: (None, 7, 7, 1280)\n","1280 1280 (7, 7)\n","Unfreeze:  top_conv\n","Unfreeze:  top_activation\n","Unfreeze:  pred_pruno2d\n","Unfreeze:  pred_pool\n","Unfreeze:  pred_dropout\n","Unfreeze:  pred_output\n","Epoch 1/50\n","187/187 - 71s - loss: 4.6966 - accuracy: 0.0262 - val_loss: 4.0704 - val_accuracy: 0.1813\n","Epoch 2/50\n","187/187 - 37s - loss: 4.2932 - accuracy: 0.0993 - val_loss: 3.2801 - val_accuracy: 0.3396\n","Epoch 3/50\n","187/187 - 38s - loss: 3.8589 - accuracy: 0.1709 - val_loss: 2.5338 - val_accuracy: 0.4541\n","Epoch 4/50\n","187/187 - 38s - loss: 3.4455 - accuracy: 0.2302 - val_loss: 2.0070 - val_accuracy: 0.5295\n","Epoch 5/50\n","187/187 - 37s - loss: 3.1052 - accuracy: 0.2793 - val_loss: 1.6762 - val_accuracy: 0.5731\n","Epoch 6/50\n","187/187 - 38s - loss: 2.8657 - accuracy: 0.3122 - val_loss: 1.4744 - val_accuracy: 0.6080\n","Epoch 7/50\n","187/187 - 38s - loss: 2.6968 - accuracy: 0.3326 - val_loss: 1.3503 - val_accuracy: 0.6278\n","Epoch 8/50\n","187/187 - 38s - loss: 2.5846 - accuracy: 0.3534 - val_loss: 1.2668 - val_accuracy: 0.6484\n","Epoch 9/50\n","187/187 - 39s - loss: 2.4874 - accuracy: 0.3701 - val_loss: 1.2099 - val_accuracy: 0.6551\n","Epoch 10/50\n","187/187 - 38s - loss: 2.4176 - accuracy: 0.3863 - val_loss: 1.1701 - val_accuracy: 0.6620\n","Epoch 11/50\n","187/187 - 38s - loss: 2.3568 - accuracy: 0.3973 - val_loss: 1.1372 - val_accuracy: 0.6704\n","Epoch 12/50\n","187/187 - 38s - loss: 2.2748 - accuracy: 0.4171 - val_loss: 1.1080 - val_accuracy: 0.6768\n","Epoch 13/50\n","187/187 - 38s - loss: 2.2404 - accuracy: 0.4185 - val_loss: 1.0965 - val_accuracy: 0.6753\n","Epoch 14/50\n","187/187 - 38s - loss: 2.1963 - accuracy: 0.4346 - val_loss: 1.0764 - val_accuracy: 0.6841\n","Epoch 15/50\n","187/187 - 39s - loss: 2.1487 - accuracy: 0.4373 - val_loss: 1.0592 - val_accuracy: 0.6908\n","Epoch 16/50\n","187/187 - 38s - loss: 2.0985 - accuracy: 0.4481 - val_loss: 1.0464 - val_accuracy: 0.6938\n","Epoch 17/50\n","187/187 - 39s - loss: 2.0879 - accuracy: 0.4545 - val_loss: 1.0337 - val_accuracy: 0.6968\n","Epoch 18/50\n","187/187 - 38s - loss: 2.0503 - accuracy: 0.4622 - val_loss: 1.0297 - val_accuracy: 0.6930\n","Epoch 19/50\n","187/187 - 38s - loss: 2.0259 - accuracy: 0.4693 - val_loss: 1.0190 - val_accuracy: 0.6950\n","Epoch 20/50\n","187/187 - 38s - loss: 2.0107 - accuracy: 0.4740 - val_loss: 1.0109 - val_accuracy: 0.6966\n","Epoch 21/50\n","187/187 - 38s - loss: 1.9710 - accuracy: 0.4748 - val_loss: 0.9987 - val_accuracy: 0.6992\n","Epoch 22/50\n","187/187 - 39s - loss: 1.9365 - accuracy: 0.4873 - val_loss: 0.9891 - val_accuracy: 0.6996\n","Epoch 23/50\n","187/187 - 38s - loss: 1.9400 - accuracy: 0.4859 - val_loss: 0.9863 - val_accuracy: 0.7017\n","Epoch 24/50\n","187/187 - 38s - loss: 1.9121 - accuracy: 0.4926 - val_loss: 0.9834 - val_accuracy: 0.7003\n","Epoch 25/50\n","187/187 - 38s - loss: 1.8967 - accuracy: 0.5017 - val_loss: 0.9780 - val_accuracy: 0.7029\n","Epoch 26/50\n","187/187 - 39s - loss: 1.8704 - accuracy: 0.5064 - val_loss: 0.9771 - val_accuracy: 0.7013\n","Epoch 27/50\n","187/187 - 38s - loss: 1.8518 - accuracy: 0.5075 - val_loss: 0.9728 - val_accuracy: 0.7028\n","Epoch 28/50\n","187/187 - 38s - loss: 1.8456 - accuracy: 0.5084 - val_loss: 0.9704 - val_accuracy: 0.7049\n","Epoch 29/50\n","187/187 - 39s - loss: 1.8131 - accuracy: 0.5135 - val_loss: 0.9704 - val_accuracy: 0.7064\n","Epoch 30/50\n","187/187 - 39s - loss: 1.8054 - accuracy: 0.5205 - val_loss: 0.9661 - val_accuracy: 0.7066\n","Epoch 31/50\n","187/187 - 38s - loss: 1.7972 - accuracy: 0.5232 - val_loss: 0.9577 - val_accuracy: 0.7095\n","Epoch 32/50\n","187/187 - 38s - loss: 1.7802 - accuracy: 0.5262 - val_loss: 0.9609 - val_accuracy: 0.7069\n","Epoch 33/50\n","187/187 - 38s - loss: 1.7559 - accuracy: 0.5254 - val_loss: 0.9602 - val_accuracy: 0.7100\n","Epoch 34/50\n","187/187 - 38s - loss: 1.7544 - accuracy: 0.5273 - val_loss: 0.9538 - val_accuracy: 0.7107\n","Epoch 35/50\n","187/187 - 38s - loss: 1.7328 - accuracy: 0.5332 - val_loss: 0.9509 - val_accuracy: 0.7135\n","Epoch 36/50\n","187/187 - 38s - loss: 1.7252 - accuracy: 0.5328 - val_loss: 0.9478 - val_accuracy: 0.7133\n","Epoch 37/50\n","187/187 - 38s - loss: 1.6995 - accuracy: 0.5438 - val_loss: 0.9480 - val_accuracy: 0.7116\n","Epoch 38/50\n","187/187 - 38s - loss: 1.7189 - accuracy: 0.5373 - val_loss: 0.9479 - val_accuracy: 0.7125\n","Epoch 39/50\n","187/187 - 39s - loss: 1.6764 - accuracy: 0.5513 - val_loss: 0.9434 - val_accuracy: 0.7141\n","Epoch 40/50\n","187/187 - 39s - loss: 1.6853 - accuracy: 0.5455 - val_loss: 0.9453 - val_accuracy: 0.7155\n","Epoch 41/50\n","187/187 - 38s - loss: 1.6508 - accuracy: 0.5543 - val_loss: 0.9427 - val_accuracy: 0.7140\n","Epoch 42/50\n","187/187 - 38s - loss: 1.6419 - accuracy: 0.5546 - val_loss: 0.9418 - val_accuracy: 0.7150\n","Epoch 43/50\n","187/187 - 38s - loss: 1.6377 - accuracy: 0.5603 - val_loss: 0.9355 - val_accuracy: 0.7170\n","Epoch 44/50\n","187/187 - 38s - loss: 1.6175 - accuracy: 0.5609 - val_loss: 0.9379 - val_accuracy: 0.7172\n","Epoch 45/50\n","187/187 - 38s - loss: 1.6019 - accuracy: 0.5654 - val_loss: 0.9392 - val_accuracy: 0.7182\n","Epoch 46/50\n","187/187 - 38s - loss: 1.5837 - accuracy: 0.5682 - val_loss: 0.9375 - val_accuracy: 0.7212\n","Epoch 47/50\n","187/187 - 38s - loss: 1.5929 - accuracy: 0.5660 - val_loss: 0.9345 - val_accuracy: 0.7174\n","Epoch 48/50\n","187/187 - 38s - loss: 1.5889 - accuracy: 0.5704 - val_loss: 0.9314 - val_accuracy: 0.7188\n","Epoch 49/50\n","187/187 - 38s - loss: 1.5736 - accuracy: 0.5733 - val_loss: 0.9334 - val_accuracy: 0.7171\n","Epoch 50/50\n","187/187 - 38s - loss: 1.5686 - accuracy: 0.5726 - val_loss: 0.9353 - val_accuracy: 0.7172\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"Q-Jml37apWKv"},"source":[""],"execution_count":null,"outputs":[]}]}